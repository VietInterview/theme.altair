angular.module("selectize",[]).value("selectizeConfig",{}).directive("selectize",["selectizeConfig",function(selectizeConfig){return{restrict:"EA",require:"^ngModel",scope:{ngModel:"=",config:"=?",options:"=?",ngDisabled:"=",ngRequired:"&"},link:function(scope,element,attrs,modelCtrl){function createItem(input){var data={};return data[config.labelField]=input,data[config.valueField]=input,data}function toggle(disabled){disabled?selectize.disable():selectize.enable()}function generateOptions(data){return data?(data=angular.isArray(data)?data:[data],$.map(data,function(opt){return"string"==typeof opt?createItem(opt):opt})):[]}function updateSelectize(){validate(),selectize.$control.toggleClass("ng-valid",modelCtrl.$valid),selectize.$control.toggleClass("ng-invalid",modelCtrl.$invalid),selectize.$control.toggleClass("ng-dirty",modelCtrl.$dirty),selectize.$control.toggleClass("ng-pristine",modelCtrl.$pristine);var value=selectize.items.slice();1===config.maxItems&&(value=value[0]),angular.equals(value,scope.ngModel)||(selectize.addOption(generateOptions(scope.ngModel)),selectize.setValue(scope.ngModel))}if(!Selectize)throw new Error("Selectize JavaScript library should be loaded before using this angular module.");Selectize.defaults.maxItems=null,Selectize.defaults.hideSelected=!0,attrs.position&&(scope.posBottom=attrs.position),Selectize.defaults.onDropdownOpen=function($dropdown){$dropdown.hide().velocity("slideDown",{begin:function(){"undefined"!=typeof scope.posBottom&&$dropdown.css({"margin-top":"0"})},duration:200,easing:[.4,0,.2,1]})},Selectize.defaults.onDropdownClose=function($dropdown){$dropdown.show().velocity("slideUp",{complete:function(){"undefined"!=typeof posBottom&&$dropdown.css({"margin-top":""})},duration:200,easing:[.4,0,.2,1]})},Selectize.defaults.onChange=function(){var $this=$(element);$this.attr("data-parsley-id")&&$this.parsley().validate()};var selectize,config=angular.extend({},Selectize.defaults,selectizeConfig,scope.config);modelCtrl.$isEmpty=function(val){return void 0===val||null===val||!val.length};var validate=function(){var isInvalid=(scope.ngRequired()||attrs.required||config.required)&&modelCtrl.$isEmpty(scope.ngModel);modelCtrl.$setValidity("required",!isInvalid)},onChange=config.onChange,onOptionAdd=config.onOptionAdd;config.onChange=function(){var args=arguments;scope.$evalAsync(function(){var value=selectize.items.slice();1===config.maxItems&&(value=value[0]),angular.equals(value,scope.ngModel)||(modelCtrl.$setViewValue(value),onChange&&onChange.apply(this,args))})},config.onOptionAdd=function(value,data){scope.options.indexOf(data)===-1&&scope.options.push(data),onOptionAdd&&onOptionAdd.apply(this,arguments)},scope.generatedOptions=generateOptions((scope.options||config.options||scope.ngModel).slice()),scope.options.length=0,scope.generatedOptions.forEach(function(item){scope.options.push(item)});var angularCallback=config.onInitialize;config.onInitialize=function(){selectize=element[0].selectize,selectize.addOption(scope.generatedOptions),selectize.setValue(scope.ngModel),angularCallback&&angularCallback(selectize),scope.$watch("options",function(){scope.generatedOptions=generateOptions((scope.options||config.options||scope.ngModel).slice()),scope.options.length=0,scope.generatedOptions.forEach(function(item){scope.options.push(item)}),selectize.clearOptions(),selectize.addOption(scope.generatedOptions),selectize.setValue(scope.ngModel)},!0),scope.$watchCollection("ngModel",updateSelectize),scope.$watch("ngDisabled",toggle)},element.after('<div class="selectize_fix"></div>'),element.selectize(config),element.on("$destroy",function(){selectize&&(selectize.destroy(),element=null)})}}}]),Selectize.define("tooltip",function(options){var self=this;this.setup=function(){var original=self.setup;return function(){original.apply(this,arguments);var $wrapper=this.$wrapper,$input=this.$input;$input.attr("title")&&$wrapper.attr("title",$input.attr("title")).attr("data-uk-tooltip",$input.attr("data-uk-tooltip"))}}()}),Selectize.define("disable_options",function(options){var self=this;options=$.extend({disableOptions:[]},options),self.onFocus=function(){var original=self.onFocus;return function(){original.apply(this,arguments),$.each(options.disableOptions,function(index,option){self.$dropdown_content.find('[data-value="'+String(option)+'"]').addClass("option-disabled")})}}(),self.onOptionSelect=function(){var original=self.onOptionSelect;return function(e){var value,$target;if(e.preventDefault&&(e.preventDefault(),e.stopPropagation()),$target=$(e.currentTarget),!$target.hasClass("option-disabled"))return $target.hasClass("create")?self.createItem():(value=$target.attr("data-value"),value&&(self.lastQuery=null,self.setTextboxValue(""),self.addItem(value),!self.settings.hideSelected&&e.type&&/mouse/.test(e.type)&&self.setActiveOption(self.getOption(value))),self.blur()),original.apply(this,arguments)}}()});